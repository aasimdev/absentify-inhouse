# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy container app to Azure Web App - absentify-app

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: 'ubuntu-latest'
    environment: 'Production'
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to registry
        uses: docker/login-action@v2
        with:
          registry: https://absentify.azurecr.io/
          username: ${{ secrets.AzureAppService_ContainerUsername_9582f3eb1536421b83bc73861ed1e922 }}
          password: ${{ secrets.AzureAppService_ContainerPassword_ebab9f795ac440ea88e6f7f657d2eec9 }}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: absentify.azurecr.io/${{ secrets.AzureAppService_ContainerUsername_9582f3eb1536421b83bc73861ed1e922 }}/absentify-app-docker:${{ github.sha }}
          file: ./Dockerfile
          build-args: |
            NEXT_PUBLIC_AZURE_AD_TENANT_ID=${{ vars.NEXT_PUBLIC_AZURE_AD_TENANT_ID }}
            NEXT_PUBLIC_GA_MEASUREMENT_ID=${{ vars.NEXT_PUBLIC_GA_MEASUREMENT_ID }}
            NEXT_PUBLIC_IS_LOCALHOST=true
            NEXT_PUBLIC_MAINTENANCE=${{ vars.NEXT_PUBLIC_MAINTENANCE }}
            NEXT_PUBLIC_MSAL_CLIENTID=${{ vars.NEXT_PUBLIC_MSAL_CLIENTID }}
            NEXT_PUBLIC_MSAL_CLIENTID_CALENDARS_PERMISSION=${{ vars.NEXT_PUBLIC_MSAL_CLIENTID_CALENDARS_PERMISSION }}
            NEXT_PUBLIC_MSAL_CLIENTID_GROUPS_PERMISSION=${{ vars.NEXT_PUBLIC_MSAL_CLIENTID_GROUPS_PERMISSION }}
            NEXT_PUBLIC_MSAL_CLIENTID_MAILBOX_PERMISSION=${{ vars.NEXT_PUBLIC_MSAL_CLIENTID_MAILBOX_PERMISSION }}
            NEXT_PUBLIC_MSAL_CLIENTID_USERS_PERMISSION=${{ vars.NEXT_PUBLIC_MSAL_CLIENTID_USERS_PERMISSION }}
            NEXT_PUBLIC_MS_PWA=${{ vars.NEXT_PUBLIC_MS_PWA }}
            NEXT_PUBLIC_PADDLE_API_URL=${{ vars.NEXT_PUBLIC_PADDLE_API_URL }}
            NEXT_PUBLIC_PADDLE_SANDBOX=${{ vars.NEXT_PUBLIC_PADDLE_SANDBOX }}
            NEXT_PUBLIC_PADDLE_VENDOR_ID=${{ vars.NEXT_PUBLIC_PADDLE_VENDOR_ID }}
            NEXT_PUBLIC_RUNMODE=${{ vars.NEXT_PUBLIC_RUNMODE }}
            SKIP_ENV_VALIDATION=true
            SENTRY_URL=${{ vars.SENTRY_URL }}
            SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
            NEXT_PUBLIC_APPINSIGHTS_CONNECTIONSTRING=${{ vars.NEXT_PUBLIC_APPINSIGHTS_CONNECTIONSTRING }}
            NEXT_PUBLIC_APPINSIGHTS_INSTRUMENTATIONKEY=${{ vars.NEXT_PUBLIC_APPINSIGHTS_INSTRUMENTATIONKEY }}
            AZURE_BLOB_URL=${{ secrets.AZURE_BLOB_URL }}
            AZURE_BLOB_COMPANY_LOGO_URL=${{ secrets.AZURE_BLOB_COMPANY_LOGO_URL }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'absentify-app'
          slot-name: 'production'
          publish-profile: ${{ secrets.AzureAppService_PublishProfile_25db11b8e6464d37a34ea00707203728 }}
          images: 'absentify.azurecr.io/${{ secrets.AzureAppService_ContainerUsername_9582f3eb1536421b83bc73861ed1e922 }}/absentify-app-docker:${{ github.sha }}'

  cleanup:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Login to Azure CLI
        run: |
          az login --service-principal -u c483bfd3-733b-40a8-93bc-c092512f8855 -p=${{ secrets.Azure_Container_Secret }} --tenant 43b518ca-563a-4dbb-a9c9-250802ea8563

      - name: Delete old container images
        run: |
          az acr manifest list-metadata --registry absentify --name absentify/absentify-app-docker --orderby time_desc --query "[].digest" --output tsv | awk 'NR>30 {print $1}' | xargs -I% az acr repository delete --name absentify --image absentify/absentify-app-docker@% --yes
